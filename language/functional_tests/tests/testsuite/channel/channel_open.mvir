//! account: alice, 10000000

//! sender: alice
module NativeTest {
    import 0x0.Channel;
    import 0x0.ChannelAccount;
    import 0x0.ChannelTransaction;
    import 0x0.LibraAccount;
    import 0x0.LibraCoin;


    public test1() {
        let addr: address;
        let account_exists: bool;
        let ten_coins: LibraCoin.T;
        let account_exists_now: bool;
        let account2_balance: u64;
        let account2_sequence_number: u64;

        addr = 0x0111111111111111111111111111111111111011111111111111111111111110;
        account_exists = LibraAccount.exists(copy(addr));
        assert(!move(account_exists), 83);

        ten_coins = LibraAccount.withdraw_from_sender(10);
        LibraAccount.create_account(copy(addr));
        LibraAccount.deposit(copy(addr), move(ten_coins));

        account_exists_now = LibraAccount.exists(copy(addr));
        assert(move(account_exists_now), 84);

        Channel.open(move(addr), h"616263", 1);
        return;
    }

}

//! new-transaction
//! sender: alice
import {{alice}}.NativeTest;
main() {
    NativeTest.test1();
    return;
}
